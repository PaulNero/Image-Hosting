# Конфигурация Nginx для сервера хостинга изображений
#
# Что делает этот конфиг:
# 1. Проксирует запросы к Python-серверу
# 2. Кэширует статические файлы
# 3. Обрабатывает загрузку больших файлов
# 4. Настраивает правильные заголовки для CORS

events {
    # Максимальное количество одновременных соединений
    worker_connections 1024;
}

http {
    # Подключаем типы MIME для правильной отдачи файлов
    include mime.types;
    
    # Оптимизация производительности
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;
    client_max_body_size 5M;  # Ограничение размера загружаемых файлов

    # Настройки буферизации
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 8k;
    
    # Базовые настройки безопасности
    server_tokens off;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";

    # Настройка апстрима для проксирования к Python-серверу
    upstream app_server {
        server app:8000;
    }

    server {
        # Слушаем 80 порт (HTTP)
        listen 80;
        
        # Главная страница и общие настройки
        location / {
            proxy_pass http://app_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Таймауты
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Буферизация
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 8k;
        }

        # Раздача статических файлов (css, js, html)
        location /static/ {
            alias /app/static/;
            expires 1h;  # Кэширование на 1 час
            add_header Cache-Control "public, no-transform";
            try_files $uri $uri/ =404;
        }

        # HTML страницы для списка изображений и успешной загрузки
        location ~ ^/(all_images|upload_success)\.html$ {
            proxy_pass http://app_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Раздача загруженных изображений
        location /images/ {
            alias /app/images/;
            expires 1h;  # Кэширование картинок на 1 час
            add_header Cache-Control "public, no-transform";
            try_files $uri $uri/ =404;
            
            # Оптимизация для изображений
            tcp_nodelay off;
            keepalive_timeout 15;
        }

        # API для получения списка изображений
        location /api/images {
            proxy_pass http://app_server/api/images;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Настройки для загрузки файлов
        location /upload {
            proxy_pass http://app_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            # Увеличенные таймауты для больших файлов
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            # Отключаем буферизацию для загрузки
            proxy_request_buffering off;
            client_max_body_size 10M;
        }

        # Настройки для favicon
        location = /favicon.ico {
            alias /app/static/favicon.ico;
            expires max;
            add_header Cache-Control "public, immutable";
        }

        # Настройки журналирования
        access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
        error_log /var/log/nginx/error.log warn;
    }
}